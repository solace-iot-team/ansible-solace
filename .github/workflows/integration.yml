
name: integration tests
on:
  # for testing
  workflow_dispatch:

  schedule:
    # - cron: '1 17 * * THU'
    - cron: '1 17 * * *'
  pull_request:
    branches:
      - master
env:
  TEST_TEST_RUNNER_SCRIPT: ".test-runner/run.integration.sh"
  TEST_TEST_RUNNER_LOGS_NAME: ansible-solace-test-integration-logs
  TEST_RUNNER_LOGS_DIR: integration-logs

jobs:
  integration_test:

    runs-on: ubuntu-latest
    strategy:
      # max-parallel: 1
      matrix:
        python-version: [ '3.6' ]
        # python-version: [ '3.6', '3.8', '3.9' ]
        ansible-version: [ 'ansible>=2.10.3' ]
        # ansible-version: [ 'ansible>=2.9.11,<2.10.0', 'ansible>=2.10.3' ]
        # ansible-version: [ 'ansible>=2.9.11,<2.10.0' ]

    steps:

      - name: Check Auth
        if: github.event_name == 'workflow_dispatch' && github.actor != 'ricardojosegomezulmke'
        run: |
          echo "not authorized"
          echo '::set-output name=IS_AUTHORIZED::false'
        id: auth
      - name: Cancel Workflow
        if: ${{ always() && steps.auth.outputs.IS_AUTHORIZED == 'false' }}
        uses: andymckay/cancel-action@0.2

      - name: Checkout Current Branch
        uses: actions/checkout@master
        with:
          ref: ${{ github.ref }}

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install ansible and collection
        env:
          ANSIBLE_VERSION: "${{ matrix.ansible-version }}"
        run: |
          python -m pip install --upgrade pip
          pip install "$ANSIBLE_VERSION"
          pip install requests
          pip install xmltodict
          pip install docker-compose
          ansible-galaxy collection install solace.pubsub_plus

      - name: Run Tests
        run: |
          export ANSIBLE_PYTHON_INTERPRETER=$(python -c "import sys; print(sys.executable)")
          export PROJECT_HOME="$GITHUB_WORKSPACE"
          export SOLACE_CLOUD_API_TOKEN="${{ secrets.SOLACE_CLOUD_API_TOKEN_ALL_PERMISSIONS }}"
          export LOG_DIR="$GITHUB_WORKSPACE/${TEST_RUNNER_LOGS_DIR}"
          ./${TEST_TEST_RUNNER_SCRIPT}

      - name: Archive logs
        if: ${{ (failure() && !cancelled()) || (always() && github.event_name == 'workflow_dispatch') }}
        uses: actions/upload-artifact@v2
        with:
          name: ${{ env.TEST_TEST_RUNNER_LOGS_NAME }}
          path: ${{ github.workspace }}/${{ env.TEST_RUNNER_LOGS_DIR }}
          if-no-files-found: error

###
# The End.
