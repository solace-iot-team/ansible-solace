
# ---------------------------------------------------------------------------------------------
# MIT License
#
# Copyright (c) 2020, Solace Corporation, Ricardo Gomez-Ulmke (ricardo.gomez-ulmke@solace.com)
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.
# ---------------------------------------------------------------------------------------------

-
    name: Get/Remove/Add/Update Queue objects with subscriptions
    hosts: "{{ brokers }}"
    gather_facts: no
    any_errors_fatal: true
    module_defaults:
      solace_get_available:
        host: "{{ sempv2_host }}"
        port: "{{ sempv2_port }}"
        secure_connection: "{{ sempv2_is_secure_connection }}"
        username: "{{ sempv2_username }}"
        password: "{{ sempv2_password }}"
        timeout: "{{ sempv2_timeout }}"
      solace_queue:
        host: "{{ sempv2_host }}"
        port: "{{ sempv2_port }}"
        secure_connection: "{{ sempv2_is_secure_connection }}"
        username: "{{ sempv2_username }}"
        password: "{{ sempv2_password }}"
        timeout: "{{ sempv2_timeout }}"
        msg_vpn: default
      solace_queue_subscription:
        host: "{{ sempv2_host }}"
        port: "{{ sempv2_port }}"
        secure_connection: "{{ sempv2_is_secure_connection }}"
        username: "{{ sempv2_username }}"
        password: "{{ sempv2_password }}"
        timeout: "{{ sempv2_timeout }}"
        msg_vpn: default



    tasks:
      - name: "Pause Until Broker/Service available"
        solace_get_available:
        register: _result
        until: "_result.rc == 0 and _result.is_available == True"
        retries: 25 # 25 * 5 seconds
        delay: 5 # Every 5 seconds

      - include_vars:
          file: "./playbook-include/queues.vars.json"
          name: target_queue_list

      - name: Adding / updating queues
        include_tasks: ./playbook-include/queue.tasks.yml
        register: result
        loop: "{{ target_queue_list.queues }}"
        loop_control:
          loop_var: queue_item

      - name: Prompt to check Broker console
        pause:
          prompt: "{{ item }}"
        with_items: |
            "Check the queues created on the broker console."
            "  http://localhost:8080 (admin/admin)"
            "Press ENTER to delete queues again or CTRL+C and A to abort..."

      - name: Deleting queues
        solace_queue:
          name: "{{ item.name }}"
          state: absent
        loop: "{{ target_queue_list.queues }}"



###
# The End.
