-
  name: Create Message Vpns
  hosts: all
  connection: local
  gather_facts: no
  any_errors_fatal: true
  collections:
    - solace.pubsub_plus
  module_defaults:
    solace_vpn:
      host: "{{ sempv2_host }}"
      port: "{{ sempv2_port }}"
      secure_connection: "{{ sempv2_is_secure_connection }}"
      username: "{{ sempv2_username }}"
      password: "{{ sempv2_password }}"
      timeout: "{{ sempv2_timeout }}"
      reverse_proxy: "{{ semp_reverse_proxy | default(omit) }}"
# ####################################################################################
# Standard Begin-of-playbook
  vars:
    playbook_name: "create_message_vpns"
    date_time_file: "{{ DATE_TIME }}"
    tmp_ansible_solace_log_path: "{{ WORKING_DIR }}/tmp/{{ inventory_hostname }}.{{ date_time_file }}.{{ playbook_name }}.ansible-solace.log"
    final_ansible_solace_log_path: "{{ WORKING_DIR }}/ansible-solace-logs/{{ inventory_hostname }}.{{ date_time_file }}.{{ playbook_name }}.ansible-solace.log"
    config_db_dir: "{{ WORKING_DIR }}/config_db"
    # inventory_file: "api_broker.inventory.yml"
    actual_db_dir: "{{ WORKING_DIR }}/actual_db"
  pre_tasks:
    - name: ensure paths exists
      file:
        path: "{{ item }}"
        state: directory
      loop:
        - "{{ tmp_ansible_solace_log_path | dirname }}"
        - "{{ final_ansible_solace_log_path | dirname }}"
        - "{{ config_db_dir }}"
        - "{{ actual_db_dir }}/{{ inventory_hostname }}"
  environment:
    ANSIBLE_SOLACE_LOG_PATH: "{{ tmp_ansible_solace_log_path }}"
# Standard Begin-of-playbook
# ####################################################################################
  tasks:
    - include_vars:
        file: "{{ config_db_dir }}/message-vpns.vars.yml"

    - name: create message vpns
      solace_vpn:
        name: "{{ item.name }}"
        settings: "{{ message_vpns.common_settings | combine(item.settings, recursive=True) }}"
        state: present
      loop: "{{ message_vpns.vpn_list }}"

    - name: get vpn details
      solace_get_vpns:
        query_params:
          where:
            - "msgVpnName==api_*"
      register: result

    - name: save vpn details to actual db
      copy:
        content: "{{ result.result_list | to_nice_yaml(indent=2) }}"
        dest: "{{ actual_db_dir }}/{{ inventory_hostname }}/api_vpn_list_details.yml"
      delegate_to: localhost

    - name: generate vpns inventory
      set_fact:
        api_broker_vpns_inventory_j2_template: "./j2-templates/api_broker_vpns.inventory.j2"
    - set_fact:
        vpns_inventory: "{{ lookup('template', api_broker_vpns_inventory_j2_template) | from_yaml }}"

    - name: save generated vpns inventory
      copy:
        content: "{{ vpns_inventory | to_nice_yaml(indent=2) }}"
        dest: "{{ actual_db_dir }}/{{ inventory_hostname }}/api_broker_vpns.inventory.yml"
      delegate_to: localhost

# ####################################################################################
# Standard End-of-playbook
    - name: "Move log file to final"
      copy:
        src: "{{ tmp_ansible_solace_log_path }}"
        dest: "{{ final_ansible_solace_log_path }}"
      delegate_to: localhost
    - file:
        path: "{{ tmp_ansible_solace_log_path }}"
        state: absent
      delegate_to: localhost
# Standard End-of-playbook
# ####################################################################################

###
# The End.
