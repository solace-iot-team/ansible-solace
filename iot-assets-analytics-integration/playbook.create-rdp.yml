-
  name: "Configure REST Delivery Point"
  hosts: all
  gather_facts: no
  any_errors_fatal: true
  collections:
    - solace.pubsub_plus
  module_defaults:
    solace_get_available:
      host: "{{ sempv2_host }}"
      port: "{{ sempv2_port }}"
      secure_connection: "{{ sempv2_is_secure_connection }}"
      username: "{{ sempv2_username }}"
      password: "{{ sempv2_password }}"
      timeout: "{{ sempv2_timeout }}"
    solace_cert_authority:
      host: "{{ sempv2_host }}"
      port: "{{ sempv2_port }}"
      secure_connection: "{{ sempv2_is_secure_connection }}"
      username: "{{ sempv2_username }}"
      password: "{{ sempv2_password }}"
      timeout: "{{ sempv2_timeout }}"
      solace_cloud_api_token: "{{ SOLACE_CLOUD_API_TOKEN if broker_type=='solace_cloud' else omit }}"
      solace_cloud_service_id: "{{ solace_cloud_service_id | default(omit) }}"
    solace_queue:
      host: "{{ sempv2_host }}"
      port: "{{ sempv2_port }}"
      secure_connection: "{{ sempv2_is_secure_connection }}"
      username: "{{ sempv2_username }}"
      password: "{{ sempv2_password }}"
      timeout: "{{ sempv2_timeout }}"
      msg_vpn: "{{ vpn }}"
    solace_queue_subscription:
      host: "{{ sempv2_host }}"
      port: "{{ sempv2_port }}"
      secure_connection: "{{ sempv2_is_secure_connection }}"
      username: "{{ sempv2_username }}"
      password: "{{ sempv2_password }}"
      timeout: "{{ sempv2_timeout }}"
      msg_vpn: "{{ vpn }}"
    solace_rdp:
      host: "{{ sempv2_host }}"
      port: "{{ sempv2_port }}"
      secure_connection: "{{ sempv2_is_secure_connection }}"
      username: "{{ sempv2_username }}"
      password: "{{ sempv2_password }}"
      timeout: "{{ sempv2_timeout }}"
      msg_vpn: "{{ vpn }}"
    solace_rdp_rest_consumer:
      host: "{{ sempv2_host }}"
      port: "{{ sempv2_port }}"
      secure_connection: "{{ sempv2_is_secure_connection }}"
      username: "{{ sempv2_username }}"
      password: "{{ sempv2_password }}"
      timeout: "{{ sempv2_timeout }}"
      msg_vpn: "{{ vpn }}"
    solace_rdp_rest_consumer_trusted_cn:
      host: "{{ sempv2_host }}"
      port: "{{ sempv2_port }}"
      secure_connection: "{{ sempv2_is_secure_connection }}"
      username: "{{ sempv2_username }}"
      password: "{{ sempv2_password }}"
      timeout: "{{ sempv2_timeout }}"
      msg_vpn: "{{ vpn }}"
    solace_rdp_queue_binding:
      host: "{{ sempv2_host }}"
      port: "{{ sempv2_port }}"
      secure_connection: "{{ sempv2_is_secure_connection }}"
      username: "{{ sempv2_username }}"
      password: "{{ sempv2_password }}"
      timeout: "{{ sempv2_timeout }}"
      msg_vpn: "{{ vpn }}"
    solace_client_profile:
      host: "{{ sempv2_host }}"
      port: "{{ sempv2_port }}"
      secure_connection: "{{ sempv2_is_secure_connection }}"
      username: "{{ sempv2_username }}"
      password: "{{ sempv2_password }}"
      timeout: "{{ sempv2_timeout }}"
      msg_vpn: "{{ vpn }}"
      solace_cloud_api_token: "{{ SOLACE_CLOUD_API_TOKEN if broker_type=='solace_cloud' else omit }}"
      solace_cloud_service_id: "{{ solace_cloud_service_id | default(omit) }}"
    solace_acl_profile:
      host: "{{ sempv2_host }}"
      port: "{{ sempv2_port }}"
      secure_connection: "{{ sempv2_is_secure_connection }}"
      username: "{{ sempv2_username }}"
      password: "{{ sempv2_password }}"
      timeout: "{{ sempv2_timeout }}"
      msg_vpn: "{{ vpn }}"
    solace_client_username:
      host: "{{ sempv2_host }}"
      port: "{{ sempv2_port }}"
      secure_connection: "{{ sempv2_is_secure_connection }}"
      username: "{{ sempv2_username }}"
      password: "{{ sempv2_password }}"
      timeout: "{{ sempv2_timeout }}"
      msg_vpn: "{{ vpn }}"
  pre_tasks:
    - include_vars:
        file: "rdp.vars.yml"
        name: rdp
  tasks:
    - name: "Check vars"
      assert:
        that:
          - WORKING_DIR is defined
        fail_msg: "one or more variables not defined"

    - name: ensure WORKING_DIR exists
      file:
        path: "{{ WORKING_DIR }}"
        state: directory
        
    - name: Check if real or dummy settings for azure function
      stat:
        path: "{{ WORKING_DIR }}/azure-deployment/settings.az-func.json"
      register: s
    - set_fact:
        real_az_func: "{{ True if s.stat.exists else False }}"

    - include_vars:
        file: "{{ WORKING_DIR }}/azure-deployment/settings.az-func.json"
        name: settings
      when: real_az_func

    - include_vars:
        file: settings.az-func.json
        name: settings
      when: not real_az_func

    - name: "Upload Azure Certificate if TLS"
      solace_cert_authority:
        name: "{{ settings.az_cert_auth.name }}"
        cert_content: "{{ lookup('file', settings.az_cert_auth.certificate_pem_file) }}"
        settings:
          revocationCheckEnabled: false
        state: present
      when: settings.az_rdp_2_blob_func.az_func_tls_enabled

    - name: "RDP: Client Profile"
      solace_client_profile:
        name: "{{ rdp.name }}"
        settings:
          allowBridgeConnectionsEnabled: false
          allowGuaranteedMsgSendEnabled: true
          allowGuaranteedMsgReceiveEnabled: true
          maxEndpointCountPerClientUsername: 10
        state: present

    - name: "RDP: ACL Profile"
      solace_acl_profile:
        name: "{{ rdp.name }}"
        settings:
          clientConnectDefaultAction: "allow"
          publishTopicDefaultAction: "allow"
          subscribeTopicDefaultAction: "allow"
        state: present

    # Note: If it exists already, API does not allow to update certain
    #       settings. It must be disabled first.
    - name: "RDP: Disable Client Username"
      solace_client_username:
        name: "{{ rdp.name }}"
        settings:
          enabled: false
        state: present

    - name: "RDP: Client Username"
      solace_client_username:
        name: "{{ rdp.name }}"
        settings:
          enabled: true
          password: "{{ rdp.name }}"
          aclProfileName: "{{ rdp.name }}"
          clientProfileName: "{{ rdp.name }}"
        state: present

    - name: "Queue: Create Tasks"
      include_tasks: ./tasks/rdp-queues.tasks.yml
      register: result
      loop: "{{ rdp.queues }}"
      when: result.rc|default(0)==0

    - name: "Queue Subscription: Add"
      solace_queue_subscription:
        queue: "{{ item.name }}"
        name: "{{ item.subscr_topic }}"
        state: present
      register: result
      loop: "{{ rdp.queues }}"
      when: result.rc|default(0)==0

    - name: "RDP: Disable"
      solace_rdp:
        name: "{{ rdp.name }}"
        settings:
          enabled: false
        state: present

    - name: "RDP RestConsumer: Setup"
      solace_rdp_rest_consumer:
        rdp_name: "{{ rdp.name }}"
        name: "{{ rdp.name }}"
        settings:
          enabled: false
          remoteHost: "{{ rdp.remote_host }}"
          remotePort: "{{ rdp.remote_port }}"
          tlsEnabled: "{{ rdp.tls_enabled }}"
          outgoingConnectionCount: "{{ rdp.outgoing_connection_count }}"
          maxPostWaitTime: "{{ rdp.max_response_wait_time_secs }}"
          retryDelay: "{{ rdp.connection_retry_delay_secs }}"
        state: present

    - name: "RDP TLS Trusted Common Name: Add to REST Consumer"
      solace_rdp_rest_consumer_trusted_cn:
        rdp_name: "{{ rdp.name }}"
        rest_consumer_name: "{{ rdp.name }}"
        name: "{{ rdp.trusted_common_name }}"
        state: present

    - name: "RDP: Queue Bindings"
      solace_rdp_queue_binding:
        rdp_name: "{{ rdp.name }}"
        name: "{{ item.name }}"
        settings:
          postRequestTarget: "{{ rdp.post_request_target }}?path={{ item.path }}&pathCompose={{ item.pathCompose }}&{{ rdp.post_request_target_params }}"
        state: present
      loop: "{{ rdp.queues }}"
      when: result.rc|default(0)==0

    - name: "RDP RestConsumer: Enable"
      solace_rdp_rest_consumer:
        rdp_name: "{{ rdp.name }}"
        name: "{{ rdp.name }}"
        settings:
          enabled: true
        state: present

    - name: "RDP: Enable"
      solace_rdp:
        name: "{{ rdp.name }}"
        settings:
          enabled: true
        state: present
