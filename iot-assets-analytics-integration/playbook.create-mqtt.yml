
# ---------------------------------------------------------------------------------------------
# MIT License
#
# Copyright (c) 2020, Solace Corporation, Ricardo Gomez-Ulmke (ricardo.gomez-ulmke@solace.com)
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.
# ---------------------------------------------------------------------------------------------

-
  name: "Configure MQTT for Assets"
  hosts: all
  gather_facts: no
  any_errors_fatal: true
  module_defaults:
    solace_gather_facts:
      host: "{{ sempv2_host }}"
      port: "{{ sempv2_port }}"
      secure_connection: "{{ sempv2_is_secure_connection }}"
      username: "{{ sempv2_username }}"
      password: "{{ sempv2_password }}"
      timeout: "{{ sempv2_timeout }}"
      solace_cloud_api_token: "{{ solace_cloud_api_token | default(omit) }}"
      solace_cloud_service_id: "{{ solace_cloud_service_id | default(omit) }}"
    solace_client_profile:
      host: "{{ sempv2_host }}"
      port: "{{ sempv2_port }}"
      secure_connection: "{{ sempv2_is_secure_connection }}"
      username: "{{ sempv2_username }}"
      password: "{{ sempv2_password }}"
      timeout: "{{ sempv2_timeout }}"
      msg_vpn: "{{ vpn }}"
      solace_cloud_api_token: "{{ solace_cloud_api_token | default(omit) }}"
      solace_cloud_service_id: "{{ solace_cloud_service_id | default(omit) }}"
    solace_acl_profile:
      host: "{{ sempv2_host }}"
      port: "{{ sempv2_port }}"
      secure_connection: "{{ sempv2_is_secure_connection }}"
      username: "{{ sempv2_username }}"
      password: "{{ sempv2_password }}"
      timeout: "{{ sempv2_timeout }}"
      msg_vpn: "{{ vpn }}"
    solace_acl_publish_topic_exception:
      host: "{{ sempv2_host }}"
      port: "{{ sempv2_port }}"
      secure_connection: "{{ sempv2_is_secure_connection }}"
      username: "{{ sempv2_username }}"
      password: "{{ sempv2_password }}"
      timeout: "{{ sempv2_timeout }}"
      msg_vpn: "{{ vpn }}"
    solace_acl_subscribe_topic_exception:
      host: "{{ sempv2_host }}"
      port: "{{ sempv2_port }}"
      secure_connection: "{{ sempv2_is_secure_connection }}"
      username: "{{ sempv2_username }}"
      password: "{{ sempv2_password }}"
      timeout: "{{ sempv2_timeout }}"
      msg_vpn: "{{ vpn }}"
    solace_client_username:
      host: "{{ sempv2_host }}"
      port: "{{ sempv2_port }}"
      secure_connection: "{{ sempv2_is_secure_connection }}"
      username: "{{ sempv2_username }}"
      password: "{{ sempv2_password }}"
      timeout: "{{ sempv2_timeout }}"
      msg_vpn: "{{ vpn }}"
    solace_mqtt_session:
      host: "{{ sempv2_host }}"
      port: "{{ sempv2_port }}"
      secure_connection: "{{ sempv2_is_secure_connection }}"
      username: "{{ sempv2_username }}"
      password: "{{ sempv2_password }}"
      timeout: "{{ sempv2_timeout }}"
      msg_vpn: "{{ vpn }}"
      virtual_router: "{{ virtual_router }}"
    solace_mqtt_session_subscription:
      host: "{{ sempv2_host }}"
      port: "{{ sempv2_port }}"
      secure_connection: "{{ sempv2_is_secure_connection }}"
      username: "{{ sempv2_username }}"
      password: "{{ sempv2_password }}"
      timeout: "{{ sempv2_timeout }}"
      msg_vpn: "{{ vpn }}"
      virtual_router: "{{ virtual_router }}"

  tasks:

    # DEBUG
    # - meta: end_play

    - name: Get Solace Facts
      solace_gather_facts:

    - include_vars:
        file: "./lib/vars.mqtt.yml"
        name: mqtt

    - name: "MQTT: Client Profile"
      solace_client_profile:
        name: "{{ mqtt.name }}"
        settings:
          allowBridgeConnectionsEnabled: false
          allowGuaranteedMsgSendEnabled: true
          allowGuaranteedMsgReceiveEnabled: true
          allowGuaranteedEndpointCreateEnabled: true
          allowTransactedSessionsEnabled: false
          compressionEnabled: true
        state: present

    - name: "MQTT: ACL Profile"
      solace_acl_profile:
        name: "{{ mqtt.name }}"
        settings:
          clientConnectDefaultAction: "allow"
          publishTopicDefaultAction: "disallow"
          subscribeTopicDefaultAction: "disallow"
        state: present

    - name: "MQTT: ACL Profile Publish Topic Exception"
      solace_acl_publish_topic_exception:
        semp_version: "{{ ansible_facts.solace.about.api.sempVersion }}"
        acl_profile_name: "{{ mqtt.name }}"
        name: "{{ pub_topic }}"
        state: present
      loop: "{{ mqtt.acl_profile.pub_topics }}"
      loop_control:
        loop_var: pub_topic

    - name: "MQTT: ACL Profile Subscribe Topic Exception"
      solace_acl_subscribe_topic_exception:
        semp_version: "{{ ansible_facts.solace.about.api.sempVersion }}"
        acl_profile_name: "{{ mqtt.name }}"
        name: "{{ sub_topic }}"
        state: present
      loop: "{{ mqtt.acl_profile.sub_topics }}"
      loop_control:
        loop_var: sub_topic

    - name: "MQTT: Client Usernames"
      solace_client_username:
        name: "{{ mqtt_asset.device_id }}"
        settings:
          enabled: false
          password: "{{ mqtt_asset.device_id }}"
          aclProfileName: "{{ mqtt.name }}"
          clientProfileName: "{{ mqtt.name }}"
        state: present
      loop: "{{ mqtt.mqtt_assets }}"
      loop_control:
        loop_var: mqtt_asset

    - name: "MQTT: Mqtt Sessions"
      include_tasks: ./lib/tasks.playbook.mqtt-sessions.yml
      loop: "{{ mqtt.mqtt_assets }}"
      loop_control:
        loop_var: mqtt_asset

    - name: "MQTT: Client Usernames - Enable"
      solace_client_username:
        name: "{{ mqtt_asset.device_id }}"
        settings:
          enabled: true
        state: present
      loop: "{{ mqtt.mqtt_assets }}"
      loop_control:
        loop_var: mqtt_asset


###
# The End.
